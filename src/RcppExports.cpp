// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// response
NumericMatrix response(NumericMatrix x, double param1, double param2, double param3);
RcppExport SEXP _xsdm_response(SEXP xSEXP, SEXP param1SEXP, SEXP param2SEXP, SEXP param3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type param1(param1SEXP);
    Rcpp::traits::input_parameter< double >::type param2(param2SEXP);
    Rcpp::traits::input_parameter< double >::type param3(param3SEXP);
    rcpp_result_gen = Rcpp::wrap(response(x, param1, param2, param3));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_xsdm_response", (DL_FUNC) &_xsdm_response, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_xsdm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
