[{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://alrobles.github.io/xsdm/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://alrobles.github.io/xsdm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emilio Berti. Author. Daniel C. Reuman. Author. Angel Luis Robles Fernandez. Author, maintainer.","code":""},{"path":"https://alrobles.github.io/xsdm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Berti E, Reuman D, Robles Fernandez (2025). xsdm: Demographic Approach Species Distribution Model. R package version 0.2.1, https://alrobles.github.io/xsdm/.","code":"@Manual{,   title = {xsdm: A Demographic Approach to Species Distribution Model},   author = {Emilio Berti and Daniel C. Reuman and Angel Luis {Robles Fernandez}},   year = {2025},   note = {R package version 0.2.1},   url = {https://alrobles.github.io/xsdm/}, }"},{"path":"https://alrobles.github.io/xsdm/reference/bernoulli_lpmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability mass fucntion — bernoulli_lpmf","title":"Probability mass fucntion — bernoulli_lpmf","text":"Probability mass fucntion","code":""},{"path":"https://alrobles.github.io/xsdm/reference/bernoulli_lpmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability mass fucntion — bernoulli_lpmf","text":"","code":"bernoulli_lpmf(prob, occ, lp_sum = FALSE)"},{"path":"https://alrobles.github.io/xsdm/reference/bernoulli_lpmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability mass fucntion — bernoulli_lpmf","text":"prob value 0 1 probability detection occ logical value (either 0 1) observed detection lp_sum Logical. true, returns total sum log likelihood","code":""},{"path":"https://alrobles.github.io/xsdm/reference/bernoulli_lpmf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability mass fucntion — bernoulli_lpmf","text":"Numeric. Bernoulli log probability mass function","code":""},{"path":"https://alrobles.github.io/xsdm/reference/bernoulli_lpmf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability mass fucntion — bernoulli_lpmf","text":"","code":"prob <- prob_detec(env = matrix(c(-1, 0, -0.1, 0.9), ncol = 1),  mu =  0, sigl =  1, sigr =  0.9, c =  -0.8, pd = 0.9) bernoulli_lpmf(prob, occ = c(0, 1, 1, 0)) #> [1] -0.7277350 -0.4764612 -0.4780140 -0.7277350"},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_crs","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_crs","text":"Check environmental data list coordinate reference system Check elements env_data list equal coords","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_crs","text":"","code":"check_envdata_crs(envData)"},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_crs","text":"envData list environmental data time serires elements.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_crs","text":"raster time serires , return crs string. returns FALSE","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_ext.html","id":null,"dir":"Reference","previous_headings":"","what":"Check environmental data list extent Check if all elements in the env_data list have equal extent — check_envdata_ext","title":"Check environmental data list extent Check if all elements in the env_data list have equal extent — check_envdata_ext","text":"Check environmental data list extent Check elements env_data list equal extent","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_ext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check environmental data list extent Check if all elements in the env_data list have equal extent — check_envdata_ext","text":"","code":"check_envdata_ext(envData)"},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_ext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check environmental data list extent Check if all elements in the env_data list have equal extent — check_envdata_ext","text":"envData list environmental data time serires elements.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_ext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check environmental data list extent Check if all elements in the env_data list have equal extent — check_envdata_ext","text":"raster time serires , return crs string. returns FALSE","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_hastime.html","id":null,"dir":"Reference","previous_headings":"","what":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_hastime","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_hastime","text":"Check environmental data list coordinate reference system Check elements env_data list equal coords","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_hastime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_hastime","text":"","code":"check_envdata_hastime(envData)"},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_hastime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_hastime","text":"envData list environmental data time serires elements.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_hastime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_hastime","text":"raster time serires , return crs string. returns FALSE","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_res.html","id":null,"dir":"Reference","previous_headings":"","what":"Check environmental data list resolution Check if all elements in the env_data list have equal resolution — check_envdata_res","title":"Check environmental data list resolution Check if all elements in the env_data list have equal resolution — check_envdata_res","text":"Check environmental data list resolution Check elements env_data list equal resolution","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check environmental data list resolution Check if all elements in the env_data list have equal resolution — check_envdata_res","text":"","code":"check_envdata_res(envData)"},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check environmental data list resolution Check if all elements in the env_data list have equal resolution — check_envdata_res","text":"envData list environmental data time serires elements.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check environmental data list resolution Check if all elements in the env_data list have equal resolution — check_envdata_res","text":"raster time serires , return crs string. returns FALSE","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_spatraster.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if all elements in env_data list are Spat Raster — check_envdata_spatraster","title":"Check if all elements in env_data list are Spat Raster — check_envdata_spatraster","text":"Check elements env_data list Spat Raster","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_spatraster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if all elements in env_data list are Spat Raster — check_envdata_spatraster","text":"","code":"check_envdata_spatraster(envData)"},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_spatraster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if all elements in env_data list are Spat Raster — check_envdata_spatraster","text":"envData list environmental data","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_spatraster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if all elements in env_data list are Spat Raster — check_envdata_spatraster","text":"logical flag elements env_data list SpatRaster objects terra package","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_timestep.html","id":null,"dir":"Reference","previous_headings":"","what":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep","text":"Check environmental data list coordinate reference system Check elements env_data list equal coords","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_timestep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep","text":"","code":"check_envdata_timestep(envData)"},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_timestep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep","text":"envData list environmental data time serires elements.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_timestep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep","text":"raster time serires , return crs string. returns FALSE","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_timestep_consistency.html","id":null,"dir":"Reference","previous_headings":"","what":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep_consistency","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep_consistency","text":"Check environmental data list coordinate reference system Check elements env_data list equal coords","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_timestep_consistency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep_consistency","text":"","code":"check_envdata_timestep_consistency(envData)"},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_timestep_consistency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep_consistency","text":"envData list environmental data time serires elements.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_envdata_timestep_consistency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_envdata_timestep_consistency","text":"raster time serires , return crs string. returns FALSE","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_duplicity.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the duplicity of points. Thecks if there are at least two or more points in a same cell for a given raster set. — check_pts_duplicity","title":"Check the duplicity of points. Thecks if there are at least two or more points in a same cell for a given raster set. — check_pts_duplicity","text":"Check duplicity points. Thecks least two points cell given raster set.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_duplicity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the duplicity of points. Thecks if there are at least two or more points in a same cell for a given raster set. — check_pts_duplicity","text":"","code":"check_pts_duplicity(occ, envData)"},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_duplicity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the duplicity of points. Thecks if there are at least two or more points in a same cell for a given raster set. — check_pts_duplicity","text":"occ SpacVector points geometries. builded vect method data.frame signatiure envData list environmental time series test duplicity","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_duplicity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the duplicity of points. Thecks if there are at least two or more points in a same cell for a given raster set. — check_pts_duplicity","text":"Logical true least two () points cell","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_haslonglat.html","id":null,"dir":"Reference","previous_headings":"","what":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_pts_haslonglat","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_pts_haslonglat","text":"Check environmental data list coordinate reference system Check elements env_data list equal coords","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_haslonglat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_pts_haslonglat","text":"","code":"check_pts_haslonglat(occ)"},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_haslonglat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_pts_haslonglat","text":"occ occurence data.frame.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_haslonglat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check environmental data list coordinate reference system Check if all elements in the env_data list have equal coords — check_pts_haslonglat","text":"Logical. TRUE data.frame occurrence points columns longitude latitude","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence.html","id":null,"dir":"Reference","previous_headings":"","what":"Check points data frame — check_pts_presence","title":"Check points data frame — check_pts_presence","text":"Check points data frame","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check points data frame — check_pts_presence","text":"","code":"check_pts_presence(occ)"},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check points data frame — check_pts_presence","text":"occ occurence species data.frame.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check points data frame — check_pts_presence","text":"Logical. TRUE data.frame occurrence points columns longitude latitude","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Check points data frame — check_pts_presence_binary","title":"Check points data frame — check_pts_presence_binary","text":"Check points data frame","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check points data frame — check_pts_presence_binary","text":"","code":"check_pts_presence_binary(occ)"},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check points data frame — check_pts_presence_binary","text":"occ occurence species data.frame.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check points data frame — check_pts_presence_binary","text":"Logical. TRUE data.frame occurrence points columns longitude latitude","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Check points data frame — check_pts_presence_na","title":"Check points data frame — check_pts_presence_na","text":"Check points data frame","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check points data frame — check_pts_presence_na","text":"","code":"check_pts_presence_na(occ)"},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check points data frame — check_pts_presence_na","text":"occ occurence species data.frame.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_pts_presence_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check points data frame — check_pts_presence_na","text":"Logical. TRUE data.frame occurrence points columns longitude latitude","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_sequence_increment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check sequence. Function to check if a vector is a sequence with same increment — check_sequence_increment","title":"Check sequence. Function to check if a vector is a sequence with same increment — check_sequence_increment","text":"Check sequence. Function check vector sequence increment","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_sequence_increment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check sequence. Function to check if a vector is a sequence with same increment — check_sequence_increment","text":"","code":"check_sequence_increment(seq)"},{"path":"https://alrobles.github.io/xsdm/reference/check_sequence_increment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check sequence. Function to check if a vector is a sequence with same increment — check_sequence_increment","text":"seq vector test constant sequence","code":""},{"path":"https://alrobles.github.io/xsdm/reference/check_sequence_increment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check sequence. Function to check if a vector is a sequence with same increment — check_sequence_increment","text":"increment sequence returns FALSE. Otherwise returns increment step","code":""},{"path":"https://alrobles.github.io/xsdm/reference/cmcc_cm_bio1.html","id":null,"dir":"Reference","previous_headings":"","what":"cmcc_cm bio1 time serires — cmcc_cm_bio1","title":"cmcc_cm bio1 time serires — cmcc_cm_bio1","text":"DATASET_DESCRIPTION","code":""},{"path":"https://alrobles.github.io/xsdm/reference/cmcc_cm_bio1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cmcc_cm bio1 time serires — cmcc_cm_bio1","text":"","code":"cmcc_cm_bio1"},{"path":"https://alrobles.github.io/xsdm/reference/cmcc_cm_bio1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"cmcc_cm bio1 time serires — cmcc_cm_bio1","text":"raster time serires 30 years bio01 data","code":""},{"path":"https://alrobles.github.io/xsdm/reference/cmcc_cm_bio1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cmcc_cm bio1 time serires — cmcc_cm_bio1","text":"data comes chelsav1 time serires cmcc_cm model. compute bio01 (Anual tas average) 30 years time serires","code":""},{"path":"https://alrobles.github.io/xsdm/reference/cmcc_cm_bio12.html","id":null,"dir":"Reference","previous_headings":"","what":"cmcc_cm bio12 time serires — cmcc_cm_bio12","title":"cmcc_cm bio12 time serires — cmcc_cm_bio12","text":"DATASET_DESCRIPTION","code":""},{"path":"https://alrobles.github.io/xsdm/reference/cmcc_cm_bio12.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cmcc_cm bio12 time serires — cmcc_cm_bio12","text":"","code":"cmcc_cm_bio12"},{"path":"https://alrobles.github.io/xsdm/reference/cmcc_cm_bio12.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"cmcc_cm bio12 time serires — cmcc_cm_bio12","text":"raster time serires 30 years bio01 data","code":""},{"path":"https://alrobles.github.io/xsdm/reference/cmcc_cm_bio12.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cmcc_cm bio12 time serires — cmcc_cm_bio12","text":"data comes chelsav1 time serires cmcc_cm model. compute bio12 (Anual precipitation) 30 years time serires","code":""},{"path":"https://alrobles.github.io/xsdm/reference/envDataArray.html","id":null,"dir":"Reference","previous_headings":"","what":"envDataArray Get an array of environmental data from presence-absence points. — envDataArray","title":"envDataArray Get an array of environmental data from presence-absence points. — envDataArray","text":"envDataArray Get array environmental data presence-absence points.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/envDataArray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"envDataArray Get an array of environmental data from presence-absence points. — envDataArray","text":"","code":"envDataArray(envData, occ = NULL)"},{"path":"https://alrobles.github.io/xsdm/reference/envDataArray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"envDataArray Get an array of environmental data from presence-absence points. — envDataArray","text":"envData List environmental variables time series stack. occ Occurence data frame. contain longitude latitude columns","code":""},{"path":"https://alrobles.github.io/xsdm/reference/envDataArray.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"envDataArray Get an array of environmental data from presence-absence points. — envDataArray","text":"array M points times N time steps times P environmental variables","code":""},{"path":"https://alrobles.github.io/xsdm/reference/envDataArray.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"envDataArray Get an array of environmental data from presence-absence points. — envDataArray","text":"","code":"occ <- mus_virtualis[1:5, ] bio1_ts <- terra::unwrap(cmcc_cm_bio1) bio12_ts <- terra::unwrap(cmcc_cm_bio12) envData <- list(bio1 = bio1_ts, bio12 = bio12_ts) envDataArray(envData, occ) #> , , bio1 #>  #>       bio01_1   bio01_2   bio01_3    bio01_4   bio01_5   bio01_6   bio01_7 #> [1,] 2.041544 1.2718751 1.5751817  0.5713276 1.5104081 1.5082459 1.2022410 #> [2,] 4.734873 3.9701821 4.2729546  3.2682683 4.2139425 4.2010183 3.9038662 #> [3,] 3.321987 2.5879431 2.8549146  1.8579131 2.8482300 2.7758704 2.5128496 #> [4,] 1.232938 0.4855629 0.7518632 -0.2382688 0.7312467 0.6912795 0.4002289 #> [5,] 2.675358 1.9005995 2.2047160  1.2012200 2.1337284 2.1423210 1.8276727 #>        bio01_8     bio01_9  bio01_10    bio01_11   bio01_12   bio01_13 bio01_14 #> [1,] 1.3444174  0.71737323 1.6226010  0.71709225  0.6023474  0.5974347 1.798676 #> [2,] 4.0406282  3.42067502 4.3124088  3.41394589  3.3075438  3.2973179 4.490965 #> [3,] 2.6167950  2.05324462 2.8842523  2.02803843  1.9570990  1.8958019 3.065305 #> [4,] 0.5208363 -0.06377887 0.8072285 -0.06998784 -0.1654946 -0.2122951 0.979832 #> [5,] 1.9752697  1.34134326 2.2598258  1.34701134  1.2241749  1.2249785 2.433444 #>        bio01_15  bio01_16  bio01_17  bio01_18 bio01_19  bio01_20 bio01_21 #> [1,]  0.7477497 1.5523660 1.1831236 1.2242181 1.842464 1.4540200 1.994852 #> [2,]  3.4462284 4.2464069 3.8833775 3.9237369 4.539315 4.1519933 4.693018 #> [3,]  2.0596343 2.8401404 2.4800737 2.5286767 3.158748 2.7282700 3.296458 #> [4,] -0.0488958 0.7478101 0.3687964 0.4227769 1.061132 0.6278824 1.198548 #> [5,]  1.3769955 2.1857024 1.8103145 1.8519902 2.472404 2.0831894 2.623004 #>      bio01_22 bio01_23 bio01_24  bio01_25  bio01_26 bio01_27 bio01_28 bio01_29 #> [1,] 1.526184 1.981605 2.202857 1.3772860 0.9900415 1.666015 1.395033 2.720851 #> [2,] 4.224597 4.675181 4.902406 4.0772175 3.6940451 4.364479 4.090788 5.415594 #> [3,] 2.812925 3.231976 3.515872 2.6921556 2.3237131 2.980252 2.664208 4.013287 #> [4,] 0.710320 1.145488 1.411001 0.5824125 0.2052700 0.874549 0.566989 1.920695 #> [5,] 2.154628 2.614823 2.830099 2.0045132 1.6127578 2.294813 2.026398 3.353134 #>      bio01_30 #> [1,] 2.319535 #> [2,] 5.016120 #> [3,] 3.623733 #> [4,] 1.527008 #> [5,] 2.950044 #>  #> , , bio12 #>  #>       bio01_1  bio01_2  bio01_3  bio01_4  bio01_5  bio01_6  bio01_7  bio01_8 #> [1,] 338.0783 491.8341 469.4761 478.5737 481.8249 329.6221 492.0890 452.8594 #> [2,] 313.3871 448.4263 425.1769 435.2373 436.7535 298.1498 448.8610 411.6198 #> [3,] 296.2627 402.9470 381.8153 400.5392 392.4493 265.6382 411.2113 367.3802 #> [4,] 325.0968 461.2005 439.8220 448.9147 446.5277 301.9816 464.4093 418.4908 #> [5,] 347.0207 511.4862 490.1235 494.3226 504.4770 342.4032 510.7664 473.5115 #>       bio01_9 bio01_10 bio01_11 bio01_12 bio01_13 bio01_14 bio01_15 bio01_16 #> [1,] 676.8963 449.3065 505.1880 619.0507 525.7949 564.1982 757.7330 417.1659 #> [2,] 618.0046 409.9378 458.0567 559.1728 478.3410 512.1521 690.8510 378.7396 #> [3,] 569.6613 373.3756 413.8610 488.3848 428.9124 468.7120 621.6374 350.0553 #> [4,] 639.4309 421.6475 471.7987 571.8433 485.1405 534.7005 711.2036 395.4493 #> [5,] 699.4839 467.0876 526.8031 648.4700 545.5829 586.8502 788.2558 432.9401 #>      bio01_17 bio01_18 bio01_19 bio01_20 bio01_21 bio01_22 bio01_23 bio01_24 #> [1,] 507.5783 394.1751 433.8776 373.9539 644.3779 439.8986 417.8187 473.7581 #> [2,] 462.3387 355.8710 394.5806 337.6175 586.3249 401.5230 380.5562 428.7120 #> [3,] 416.0023 310.7604 362.1224 298.2097 533.9747 368.8502 348.1691 388.7051 #> [4,] 475.0484 360.7419 410.2258 342.4885 607.7765 417.1682 392.2681 447.3963 #> [5,] 528.1590 415.7627 449.5895 391.6705 673.0046 454.6797 435.4983 495.3134 #>      bio01_25 bio01_26 bio01_27 bio01_28 bio01_29 bio01_30 #> [1,] 477.4332 484.2604 521.8420 407.7120 498.8041 452.3180 #> [2,] 436.0323 440.9816 473.7086 366.4401 455.5968 411.9424 #> [3,] 391.6313 398.3341 434.3192 329.0069 413.2857 375.2627 #> [4,] 443.9032 452.5553 492.1924 376.1820 468.3065 423.6129 #> [5,] 498.1498 503.9770 541.4550 420.5576 517.5599 466.0991 #>"},{"path":"https://alrobles.github.io/xsdm/reference/fit_xsdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an xsdm model — fit_xsdm","title":"Fit an xsdm model — fit_xsdm","text":"Fit xsdm model","code":""},{"path":"https://alrobles.github.io/xsdm/reference/fit_xsdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an xsdm model — fit_xsdm","text":"","code":"fit_xsdm(   xsdm_object,   fit = NULL,   recompile = FALSE,   normalize = FALSE,   prior_parameters = list(mu_par_1 = NULL, mu_par_2 = NULL, sigl_par = NULL, sigr_par =     NULL, c_par_1 = NULL, c_par_2 = NULL, L_par = NULL),   nchains = NULL,   compile_standalone = FALSE,   ... )"},{"path":"https://alrobles.github.io/xsdm/reference/fit_xsdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an xsdm model — fit_xsdm","text":"xsdm_object xsdm object created constuctor validated fit String. Default TRUE. Calculate parameters either sampling, optimization Laplace methods. Calculate mle estimation (default) Maximum posteriori estimation (need pass jacobian = TRUE  argument). Possible parameters c(\"mle\", \"map\", \"mle.laplace\", \"map.laplace\") recompile Default FALSE. TRUE, recompile Lewontin-Cohen model use features availiable box. needed use laplace optim methods. normalize Logical, normalize time series using mean standard deviation presence-absence provided points prior_parameters list parameters passed prior. nchains Default NULL. number mcmc chains passed cmdstanr sample function. compile_standalone Default TRUE. useful export loglik functions ... argument passed stan model sampling","code":""},{"path":"https://alrobles.github.io/xsdm/reference/fit_xsdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an xsdm model — fit_xsdm","text":"fitted xsdm object","code":""},{"path":"https://alrobles.github.io/xsdm/reference/idem.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two objects are the same — idem","title":"Check if two objects are the same — idem","text":"Check two objects ","code":""},{"path":"https://alrobles.github.io/xsdm/reference/idem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two objects are the same — idem","text":"","code":"idem(x, y)"},{"path":"https://alrobles.github.io/xsdm/reference/idem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two objects are the same — idem","text":"x R object test y R object test","code":""},{"path":"https://alrobles.github.io/xsdm/reference/idem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two objects are the same — idem","text":"objects , returns object. objects different returns FALSE","code":""},{"path":"https://alrobles.github.io/xsdm/reference/lc_multivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"lc_univariate Gets the multivariate Lewontin Cohen model — lc_multivariate","title":"lc_univariate Gets the multivariate Lewontin Cohen model — lc_multivariate","text":"lc_univariate Gets multivariate Lewontin Cohen model","code":""},{"path":"https://alrobles.github.io/xsdm/reference/lc_multivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lc_univariate Gets the multivariate Lewontin Cohen model — lc_multivariate","text":"","code":"lc_multivariate()"},{"path":"https://alrobles.github.io/xsdm/reference/lc_multivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lc_univariate Gets the multivariate Lewontin Cohen model — lc_multivariate","text":"NULL required side effects","code":""},{"path":[]},{"path":"https://alrobles.github.io/xsdm/reference/lc_multivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lc_univariate Gets the multivariate Lewontin Cohen model — lc_multivariate","text":"","code":"if (instantiate::stan_cmdstan_exists()) {   lc_multivariate() }"},{"path":"https://alrobles.github.io/xsdm/reference/lc_univariate.html","id":null,"dir":"Reference","previous_headings":"","what":"lc_univariate Gets the Lewontin Cohen model univariate — lc_univariate","title":"lc_univariate Gets the Lewontin Cohen model univariate — lc_univariate","text":"lc_univariate Gets Lewontin Cohen model univariate","code":""},{"path":"https://alrobles.github.io/xsdm/reference/lc_univariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lc_univariate Gets the Lewontin Cohen model univariate — lc_univariate","text":"","code":"lc_univariate()"},{"path":"https://alrobles.github.io/xsdm/reference/lc_univariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lc_univariate Gets the Lewontin Cohen model univariate — lc_univariate","text":"NULL required side effects","code":""},{"path":[]},{"path":"https://alrobles.github.io/xsdm/reference/lc_univariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lc_univariate Gets the Lewontin Cohen model univariate — lc_univariate","text":"","code":"if (instantiate::stan_cmdstan_exists()) {   lc_univariate() }"},{"path":"https://alrobles.github.io/xsdm/reference/loo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get loo from xsdm model — loo","title":"Get loo from xsdm model — loo","text":"Get loo xsdm model","code":""},{"path":"https://alrobles.github.io/xsdm/reference/loo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get loo from xsdm model — loo","text":"","code":"loo(xsdm_object, index = 1, ...)"},{"path":"https://alrobles.github.io/xsdm/reference/loo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get loo from xsdm model — loo","text":"xsdm_object xsdm object created constuctor validated index integer ginving row index sample ... argument passed stan model sampling","code":""},{"path":"https://alrobles.github.io/xsdm/reference/loo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get loo from xsdm model — loo","text":"fitted xsdm object","code":""},{"path":"https://alrobles.github.io/xsdm/reference/ltsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg","title":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg","text":"Univariate long term stochastic growth function Lewontin Cohen demographic environmental model","code":""},{"path":"https://alrobles.github.io/xsdm/reference/ltsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg","text":"","code":"ltsg(env, mu, sigl, sigr, L = NULL)"},{"path":"https://alrobles.github.io/xsdm/reference/ltsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg","text":"env Matrix Environmental time series (columns) per sites (rows) mu numeric parameter. sigl numeric parameter. sigr numeric parameter L matrix parameter","code":""},{"path":"https://alrobles.github.io/xsdm/reference/ltsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg","text":"vector long term stochastic growht values calculated site","code":""},{"path":"https://alrobles.github.io/xsdm/reference/ltsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg","text":"","code":"ltsg(env = -1, mu = 0, sigl = 1, sigr = 0.9) #>      [,1] #> [1,] -0.5"},{"path":"https://alrobles.github.io/xsdm/reference/ltsg_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg_multi","title":"Multivariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg_multi","text":"Multivariate long term stochastic growth function Lewontin Cohen demographic environmental model","code":""},{"path":"https://alrobles.github.io/xsdm/reference/ltsg_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg_multi","text":"","code":"ltsg_multi(env, mu, sigl, sigr, L)"},{"path":"https://alrobles.github.io/xsdm/reference/ltsg_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg_multi","text":"env Matrix Environmental time series (columns) per sites (rows) mu numeric parameter. sigl numeric parameter. sigr numeric parameter L matrix parameter","code":""},{"path":"https://alrobles.github.io/xsdm/reference/ltsg_uni.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg_uni","title":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg_uni","text":"Univariate long term stochastic growth function Lewontin Cohen demographic environmental model","code":""},{"path":"https://alrobles.github.io/xsdm/reference/ltsg_uni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg_uni","text":"","code":"ltsg_uni(env, mu, sigl, sigr)"},{"path":"https://alrobles.github.io/xsdm/reference/ltsg_uni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg_uni","text":"env Matrix Environmental time series (columns) per sites (rows) mu numeric parameter. sigl numeric parameter. sigr numeric parameter","code":""},{"path":"https://alrobles.github.io/xsdm/reference/ltsg_uni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Univariate long term stochastic growth function for a Lewontin Cohen demographic environmental model — ltsg_uni","text":"vector long term stochastic growth values calculated site","code":""},{"path":"https://alrobles.github.io/xsdm/reference/mus_virtualis.html","id":null,"dir":"Reference","previous_headings":"","what":"DATASET_TITLE — mus_virtualis","title":"DATASET_TITLE — mus_virtualis","text":"DATASET_DESCRIPTION DATASET_DESCRIPTION","code":""},{"path":"https://alrobles.github.io/xsdm/reference/mus_virtualis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DATASET_TITLE — mus_virtualis","text":"","code":"mus_virtualis  mus_virtualis"},{"path":"https://alrobles.github.io/xsdm/reference/mus_virtualis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DATASET_TITLE — mus_virtualis","text":"data frame 20 rows 4 variables: name character COLUMN_DESCRIPTION latitude double COLUMN_DESCRIPTION longitude double COLUMN_DESCRIPTION presence double COLUMN_DESCRIPTION data frame 20 rows 4 variables: name character COLUMN_DESCRIPTION latitude double COLUMN_DESCRIPTION longitude double COLUMN_DESCRIPTION presence double COLUMN_DESCRIPTION","code":""},{"path":"https://alrobles.github.io/xsdm/reference/mus_virtualis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DATASET_TITLE — mus_virtualis","text":"DETAILS DETAILS","code":""},{"path":"https://alrobles.github.io/xsdm/reference/new_xsdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor function for the class xsdm — new_xsdm","title":"Constructor function for the class xsdm — new_xsdm","text":"Constructor function class xsdm","code":""},{"path":"https://alrobles.github.io/xsdm/reference/new_xsdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor function for the class xsdm — new_xsdm","text":"","code":"new_xsdm(   env_data = list(),   occ = data.frame(),   stan_model = NULL,   call = character() )"},{"path":"https://alrobles.github.io/xsdm/reference/new_xsdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor function for the class xsdm — new_xsdm","text":"env_data (prefered named) list environmental raster time series. occ data.frame stan_model stan fitted object slot. Default NULL call Call function","code":""},{"path":"https://alrobles.github.io/xsdm/reference/predict.xsdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — predict.xsdm","title":"Title — predict.xsdm","text":"Title","code":""},{"path":"https://alrobles.github.io/xsdm/reference/predict.xsdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — predict.xsdm","text":"","code":"# S3 method for class 'xsdm' predict(xsdm_object, index = 1, scale = FALSE)"},{"path":"https://alrobles.github.io/xsdm/reference/predict.xsdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — predict.xsdm","text":"xsdm_object xsdm object index integer ginving row index sample posterior. Default 1 scale Logical. environmental scaled? function takes mean standard deviation provided ocurrence (presence/absence) points. scale used fit process. weight environmental data provided predict","code":""},{"path":"https://alrobles.github.io/xsdm/reference/predict.xsdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — predict.xsdm","text":"raster map","code":""},{"path":"https://alrobles.github.io/xsdm/reference/predict.xsdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — predict.xsdm","text":"","code":"bio1_ts <- terra::unwrap(cmcc_cm_bio1) envData <- list(bio1 = bio1_ts) pts <- mus_virtualis if (instantiate::stan_cmdstan_exists()) { mod <- xsdm(envData, occ = pts, fit = \"map\" ) predict(mod) }"},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of detection — prob_detec","title":"Probability of detection — prob_detec","text":"Probability detection","code":""},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of detection — prob_detec","text":"","code":"prob_detec(env, mu, sigl, sigr, c, pd, L = NULL)"},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of detection — prob_detec","text":"env Environmental time serires matrix. Rows sites columns yearly time steps. mu Numeric parameter. controls center function sigl Numeric parameter. controls left shape bell curve sigr Numeric parameter. controls right shape bell curve c Numeric parameter. controls growth limit. pd Numeric parameter. controls maximum probability L matrix parameter. Default NULL (. e. univariate Lewontin Cohen model)","code":""},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of detection — prob_detec","text":"numeric value 0 1 probability detection given environmental time series matrix parameters","code":""},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of detection — prob_detec","text":"","code":"prob_detec(env = -1, mu =  0, sigl =  1, sigr =  0.9, c =  1.1, pd = 0.8) #>           [,1] #> [1,] 0.1343853"},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of detection — prob_detec_multi","title":"Probability of detection — prob_detec_multi","text":"Probability detection","code":""},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of detection — prob_detec_multi","text":"","code":"prob_detec_multi(env, mu, sigl, sigr, L, c, pd)"},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of detection — prob_detec_multi","text":"env Environmental time serires matrix. Rows sites columns yearly time steps. mu Numeric parameter. controls center function sigl Numeric parameter. controls left shape bell curve sigr Numeric parameter. controls right shape bell curve L matrix parameter. Default NULL (. e. univariate Lewontin Cohen model) c Numeric parameter. controls growth limit. pd Numeric parameter. controls maximum probability","code":""},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of detection — prob_detec_multi","text":"numeric value 0 1 probability detection given environmental time series matrix parameters","code":""},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec_uni.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of detection — prob_detec_uni","title":"Probability of detection — prob_detec_uni","text":"Probability detection","code":""},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec_uni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of detection — prob_detec_uni","text":"","code":"prob_detec_uni(env, mu, sigl, sigr, c, pd)"},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec_uni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of detection — prob_detec_uni","text":"env Environmental time serires matrix. Rows sites columns yearly time steps. mu Numeric parameter. controls center function sigl Numeric parameter. controls left shape bell curve sigr Numeric parameter. controls right shape bell curve c Numeric parameter. controls growth limit. pd Numeric parameter. controls maximum probability","code":""},{"path":"https://alrobles.github.io/xsdm/reference/prob_detec_uni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of detection — prob_detec_uni","text":"numeric value 0 1 probability detection given environmental time series matrix parameters","code":""},{"path":"https://alrobles.github.io/xsdm/reference/run_lc_model_univariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the Lewontin Cohen model. — run_lc_model_univariate","title":"Fit the Lewontin Cohen model. — run_lc_model_univariate","text":"Fit Bernoulli Stan model return posterior summaries.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/run_lc_model_univariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the Lewontin Cohen model. — run_lc_model_univariate","text":"","code":"run_lc_model_univariate(occ, ts, grainsize = 10, ...)"},{"path":"https://alrobles.github.io/xsdm/reference/run_lc_model_univariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the Lewontin Cohen model. — run_lc_model_univariate","text":"occ Numeric vector presence absence observations (zeroes ones). ts Numeric array  environmental variables. dimensions M (sites), N (time steps) P (environmental variables) grainsize grainsize reduce sum parallelization inerly handle stan code. Ideally ... Named arguments `sample()` method CmdStan model quotient number observations number cores.   objects: <https://mc-stan.org/cmdstanr/reference/model-method-sample.html>","code":""},{"path":"https://alrobles.github.io/xsdm/reference/run_lc_model_univariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the Lewontin Cohen model. — run_lc_model_univariate","text":"data frame posterior summaries.","code":""},{"path":[]},{"path":"https://alrobles.github.io/xsdm/reference/run_lc_model_univariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit the Lewontin Cohen model. — run_lc_model_univariate","text":"","code":"if (instantiate::stan_cmdstan_exists()) {  occ <- mus_virtualis  bio1_ts <- terra::unwrap(xsdm::cmcc_cm_bio1)  bio12_ts <- terra::unwrap(xsdm::cmcc_cm_bio12)  envData <- list(bio1 = bio1_ts)  ts <- envDataArray(occ, envData)  run_lc_model_univariate(   occ = occ$presence,   ts = ts   ) }"},{"path":"https://alrobles.github.io/xsdm/reference/sample_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample points function from an environmental time series raster list. Simple function that return random points from the extension of a set of enrionmental time series raster. — sample_points","title":"Sample points function from an environmental time series raster list. Simple function that return random points from the extension of a set of enrionmental time series raster. — sample_points","text":"Sample points function environmental time series raster list. Simple function return random points extension set enrionmental time series raster.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/sample_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample points function from an environmental time series raster list. Simple function that return random points from the extension of a set of enrionmental time series raster. — sample_points","text":"","code":"sample_points(envData, n = 1e+05, return.data.frame = TRUE)"},{"path":"https://alrobles.github.io/xsdm/reference/sample_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample points function from an environmental time series raster list. Simple function that return random points from the extension of a set of enrionmental time series raster. — sample_points","text":"envData list. list environmental time series raster n numeric. number points required points return.data.frame Logical TRUE (default) return data.frame longitude latitude points, FALSE return object class SpatVect points geometries instead.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/sample_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample points function from an environmental time series raster list. Simple function that return random points from the extension of a set of enrionmental time series raster. — sample_points","text":"Either data.frame SpatVect points objects","code":""},{"path":"https://alrobles.github.io/xsdm/reference/sample_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample points function from an environmental time series raster list. Simple function that return random points from the extension of a set of enrionmental time series raster. — sample_points","text":"","code":"bio1_ts <- terra::unwrap(cmcc_cm_bio1) bio12_ts <- terra::unwrap(cmcc_cm_bio12) envData <- list(bio1 = bio1_ts, bio12 = bio1_ts)"},{"path":"https://alrobles.github.io/xsdm/reference/validate_xsdm.html","id":null,"dir":"Reference","previous_headings":"","what":"validate xsdm_object constructed via xsdm_plus function — validate_xsdm","title":"validate xsdm_object constructed via xsdm_plus function — validate_xsdm","text":"validate xsdm_object constructed via xsdm_plus function","code":""},{"path":"https://alrobles.github.io/xsdm/reference/validate_xsdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate xsdm_object constructed via xsdm_plus function — validate_xsdm","text":"","code":"validate_xsdm(xsdm_object)"},{"path":"https://alrobles.github.io/xsdm/reference/validate_xsdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate xsdm_object constructed via xsdm_plus function — validate_xsdm","text":"xsdm_object xsdm object constructed new_xsdm function","code":""},{"path":"https://alrobles.github.io/xsdm/reference/validate_xsdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validate xsdm_object constructed via xsdm_plus function — validate_xsdm","text":"validated xsdm_object","code":""},{"path":"https://alrobles.github.io/xsdm/reference/vsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual species — vsp","title":"Virtual species — vsp","text":"Virtual species","code":""},{"path":"https://alrobles.github.io/xsdm/reference/vsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Virtual species — vsp","text":"","code":"vsp(env_data, param.list = NULL)"},{"path":"https://alrobles.github.io/xsdm/reference/vsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virtual species — vsp","text":"env_data list environmental time series raster object param.list list parameters. null unidimensional model (. e. one environmental variable env list)","code":""},{"path":"https://alrobles.github.io/xsdm/reference/vsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Virtual species — vsp","text":"raster probability detectio virtual species","code":""},{"path":[]},{"path":"https://alrobles.github.io/xsdm/reference/warnifnot.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the Truth of R Expressions and Warn — warnifnot","title":"Test the Truth of R Expressions and Warn — warnifnot","text":"Test Truth R Expressions Warn","code":""},{"path":"https://alrobles.github.io/xsdm/reference/warnifnot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the Truth of R Expressions and Warn — warnifnot","text":"","code":"warnifnot(..., exprs, exprObject, local = TRUE)"},{"path":"https://alrobles.github.io/xsdm/reference/warnifnot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the Truth of R Expressions and Warn — warnifnot","text":"..., exprs number R expressions, evaluate (logical vector ) TRUE. exprObject alternative exprs ...: ‘expression-like’ object, typically expression, also call, name, atomic constant TRUE. local (exprs used:) indicates environment expressions evaluated; default one stopifnot() called.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/xsdm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"xsdm: A Demographic Approach to Species Distribution Model — xsdm-package","title":"xsdm: A Demographic Approach to Species Distribution Model — xsdm-package","text":"Integrates concepts stochastic demography species distribution modelling. Inferences, utilizing Bayesian methods based 'Stan', made aspects environmental niche species, inferences can used project species geographic range. Data requirements include species detection records spatiotemporal environmental data Berti et al. (2024, doi:10.1101/2024.10.30.621023 ) description statistical demographic models used.","code":""},{"path":[]},{"path":"https://alrobles.github.io/xsdm/reference/xsdm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"xsdm: A Demographic Approach to Species Distribution Model — xsdm-package","text":"Maintainer: Angel Luis Robles Fernandez .l.robles.fernandez@gmail.com (ORCID) Authors: Emilio Berti emilio.berti@idiv.de (ORCID) Daniel C. Reuman reuman@ku.edu (ORCID)","code":""},{"path":"https://alrobles.github.io/xsdm/reference/xsdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor function for the class xsdm — xsdm","title":"Constructor function for the class xsdm — xsdm","text":"Constructor function class xsdm","code":""},{"path":"https://alrobles.github.io/xsdm/reference/xsdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor function for the class xsdm — xsdm","text":"","code":"xsdm(env_data = list(), occ = data.frame(), fit = TRUE, ...)"},{"path":"https://alrobles.github.io/xsdm/reference/xsdm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor function for the class xsdm — xsdm","text":"env_data (prefered named) list environmental raster time series. occ data.frame name species, longitude, latitude occurrence column. fit Logical string. Default TRUE. Define fittig method xsdm. Default method sampling porsterior using MCMC. possible methods mle (Maximum likelihood estimation), map (Maximum posteriori estimation), mle.laplace (Laplace method), map.laplace. ... arguments","code":""},{"path":"https://alrobles.github.io/xsdm/reference/xsdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor function for the class xsdm — xsdm","text":"object class xsdm","code":""},{"path":"https://alrobles.github.io/xsdm/reference/xsdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor function for the class xsdm — xsdm","text":"","code":"bio1_ts <- terra::unwrap(cmcc_cm_bio1) envData <- list(bio1 = bio1_ts) #Virtual species presence/absence points pts <- mus_virtualis xsdm(envData, occ = pts, fit = FALSE) #> [1] \"\" #> $env_data #> $env_data$bio1 #> class       : SpatRaster  #> dimensions  : 22, 44, 30  (nrow, ncol, nlyr) #> resolution  : 0.04490319, 0.04490319  (x, y) #> extent      : -105.994, -104.0182, 36.99024, 37.97811  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=longlat +datum=WGS84 +no_defs  #> source(s)   : memory #> names       :     bio01,     bio01,     bio01,     bio01,     bio01,     bio01, ...  #> min values  : -1.748324, -2.439485, -2.336099, -3.273228, -2.294429, -2.282119, ...  #> max values  : 12.903168, 11.995780, 12.668166, 11.389518, 12.043122, 12.394748, ...  #> time (years): 1970 to 1999 (2 steps)  #>  #>  #> $occ #>             name latitude longitude presence #> 1  Mus virtualis 37.31750 -105.0460        1 #> 2  Mus virtualis 37.27582 -105.0199        1 #> 3  Mus virtualis 37.15976 -105.0970        1 #> 4  Mus virtualis 37.27285 -105.1149        1 #> 5  Mus virtualis 37.38733 -105.0106        1 #> 6  Mus virtualis 37.10383 -104.9552        1 #> 7  Mus virtualis 37.24345 -104.9411        1 #> 8  Mus virtualis 37.35083 -104.8350        1 #> 9  Mus virtualis 37.35744 -104.6646        1 #> 10 Mus virtualis 37.22331 -104.6135        1 #> 11 Mus virtualis 37.93347 -104.1675        0 #> 12 Mus virtualis 37.91442 -104.4131        0 #> 13 Mus virtualis 37.71030 -104.1119        0 #> 14 Mus virtualis 37.78857 -104.8942        0 #> 15 Mus virtualis 37.72496 -105.2806        0 #> 16 Mus virtualis 37.66786 -105.8077        0 #> 17 Mus virtualis 37.26155 -105.8329        0 #> 18 Mus virtualis 37.03349 -104.4268        0 #> 19 Mus virtualis 37.90458 -105.7181        0 #> 20 Mus virtualis 37.05603 -105.7191        0 #>  #> $model_spec #> NULL #>  #> $stan_model #> NULL #>  #> $samplig_data #> NULL #>  #> $sampling_result #> NULL #>  #> $call #> xsdm(env_data = envData, occ = pts, fit = FALSE) #>  #> attr(,\"class\") #> [1] \"xsdm\" if (instantiate::stan_cmdstan_exists()) {   xsdm(envData, occ = pts, fit = TRUE) }"},{"path":"https://alrobles.github.io/xsdm/reference/zero_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — zero_raster","title":"Title — zero_raster","text":"Title","code":""},{"path":"https://alrobles.github.io/xsdm/reference/zero_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — zero_raster","text":"","code":"zero_raster(envData)"},{"path":"https://alrobles.github.io/xsdm/reference/zero_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — zero_raster","text":"envData env_data (prefered named) list environmental raster time series.","code":""},{"path":"https://alrobles.github.io/xsdm/reference/zero_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — zero_raster","text":"empty raster values zero given environmetal data set provided list form.","code":""}]
